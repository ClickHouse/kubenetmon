apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kubenetmon-agent.fullname" . }}
  labels:
    {{- include "kubenetmon-agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kubenetmon-agent.selectorLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "kubenetmon-agent.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClass.enabled }}
      priorityClassName: {{ .Values.priorityClass.name }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: 
            - ./agent
          env:
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
                  divisor: 1
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
                  divisor: 1
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: COLLECTION_INTERVAL
              value: "{{ .Values.configuration.collectionInterval }}"
            - name: SKIP_CONNTRACK_SANITY_CHECK
              value: "{{ .Values.configuration.skipConntrackSanityCheck }}"
            - name: KUBENETMON_SERVER_SERVICE_HOST
              value: "{{ .Values.configuration.kubenetmonServerServiceHost }}"
            - name: KUBENETMON_SERVER_SERVICE_PORT
              value: "{{ .Values.configuration.kubenetmonServerServicePort }}"
            - name: METRICS_PORT
              value: "{{ .Values.metrics.port }}"
            - name: UPTIME_WAIT_DURATION
              value: "{{ .Values.configuration.uptimeWaitDuration }}"
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: metrics
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            initialDelaySeconds: 15
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      terminationGracePeriodSeconds: 30
