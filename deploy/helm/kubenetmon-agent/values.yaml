image:
  repository: local/kubenetmon
  pullPolicy: IfNotPresent
  tag: ""

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 50%

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
environment: development

serviceMonitors:
  enabled: false
  interval: 30s

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use. If not set and create is true, a
  # name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

priorityClass:
  name: kubenetmon
  enabled: true
  preemptionPolicy: PreemptLowerPriority
  value: 10001000

metrics:
  enabled: true
  port: 8883
  primaryAlerter: false

securityContext:
  capabilities:
    add: ["NET_ADMIN"]
    drop: ["ALL"]
  # This is needed to connect to conntrack. Not uncommon among monitoring
  # DaemonSets. datadog runs like this.
  runAsUser: 0
  readOnlyRootFilesystem: true

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 0m
    memory: 0Mi

nodeSelector: {}

tolerations: []

configuration:
  collectionInterval: 5s
  # Skip checking for non-zero conntrack counters on startup. This useful to
  # skip in test environments where conntrack accounting isn't enabled.
  skipConntrackSanityCheck: false
  kubenetmonServerServiceHost: kubenetmon-server.kubenetmon-server.svc.cluster.local
  kubenetmonServerServicePort: 8884
  uptimeWaitDuration: 300s

secrets: {}
